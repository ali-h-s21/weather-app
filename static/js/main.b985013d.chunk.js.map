{"version":3,"sources":["components/header/searchForm.js","components/header/unitsBtn.js","components/error/index.js","utils/formatWeatherData.js","components/data/weatherData.js","components/header/index.js","components/weatherbody/todayWeatherForecast/singleForecast.js","components/loadingEle.js/index.js","components/weatherbody/todayWeatherForecast/hourlyForecast.js","components/weatherbody/forecastSection.js","components/weatherbody/detialSection/detailCard.js","components/weatherbody/detialSection/listOfDetails.js","components/weatherbody/index.js","components/weatherHeader/weatherMainInfo.js","components/weatherHeader/header-img.js","components/weatherHeader/index.js","App.js","index.js"],"names":["SearchForm","setCity","showSearchError","isErrorShown","useState","searchValue","setSearchValue","onSubmit","e","preventDefault","className","type","placeholder","required","onChange","target","value","src","alt","UnitsBtn","units","toggleUnits","switchUnitHandler","name","id","checked","htmlFor","Error","props","errorMsg","fromUnixToHours","date","includeMinutes","format","fromUnixTime","fromattTodayWeather","data","coord","main","cityName","country","temp","Math","round","icon","weather","condition","details","description","feels_like","wind","wind_speed","m","parseFloat","toFixed","humidity","pressure","visibility","sunrise","sunset","formattHourlyForecast","hourlyData","formattedHourlyData","slice","map","item","time","dt","formattDailyForecast","dailyForecast","day","max_temp","max","min_temp","min","WeatherData","createContext","WeatherDataProvider","apiKey","process","isloading","setIsLoading","todayWeatherData","setTodayWeatherData","setDailyForecast","setHourlyData","city","setUnits","setShowSearchError","useEffect","a","fetch","coordRespon","json","length","localStorage","setItem","lat","lon","respon","formattedData","current","hourly","formattedDailyForecast","daily","getItem","console","error","fetchTodayWeather","Provider","children","Header","useContext","style","maxWidth","height","SingleForecast","text1","degree1","degree2","LoadingEle","styleClass","HourlyForecast","loadingElements","Array","from","keys","ele","index","ForecastSection","numOfLoadingEle","DetailCard","title","iconName","content","ListOfDetails","Object","key","split","join","WeatherBody","WeatherMainInfo","boxStyle","firstChildStyle","firstInfo","secChildStyle","secInfo","WeatherHeaderImg","WeatherHeader","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b985013d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction SearchForm({ setCity, showSearchError, isErrorShown }) {\n  const [searchValue, setSearchValue] = useState();\n\n  function onTypeHanler(e) {\n    if (isErrorShown) {\n      showSearchError(false);\n    }\n    setSearchValue(e.target.value);\n  }\n\n  function onSearchHanler(e) {\n    e.preventDefault();\n    setCity(searchValue);\n  }\n\n  return (\n    <form onSubmit={onSearchHanler}>\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          className=\"searchInput\"\n          placeholder=\"City\"\n          required\n          onChange={onTypeHanler}\n        />\n        <button type=\"submit\" className=\"searchButton\">\n          <img src=\"/images/icons/search-icon.svg\" alt=\"\" />\n        </button>\n      </div>\n    </form>\n  );\n}\nexport default SearchForm;\n","const UnitsBtn = ({ units, toggleUnits }) => {\n  function switchUnitHandler(e) {\n    toggleUnits(e.target.value);\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <input\n        type=\"radio\"\n        name=\"unit\"\n        id=\"option-1\"\n        value=\"imperial\"\n        className=\"option__1\"\n        checked={units === \"imperial\" ? true : false}\n        onChange={switchUnitHandler}\n      />\n      <input\n        type=\"radio\"\n        name=\"unit\"\n        id=\"option-2\"\n        value=\"metric\"\n        checked={units === \"metric\" ? true : false}\n        className=\"option__2\"\n        onChange={switchUnitHandler}\n      />\n      <label htmlFor=\"option-1\" className={`option option-1`}>\n        <span>F&deg;</span>\n      </label>\n      <label htmlFor=\"option-2\" className={`option option-2`}>\n        <span>C&deg;</span>\n      </label>\n    </div>\n  );\n};\n\nexport default UnitsBtn;\n","export default Error = function (props) {\n  return (\n    <div className={\"error-box\"}>\n      <h6 className=\"error-msg\">{props.errorMsg}</h6>\n    </div>\n  );\n};\n","import { fromUnixTime, format } from \"date-fns\";\n\n// Convert Time From [166464...] To => for example [10:30 AM,  or 10 AM]\nfunction fromUnixToHours(date, includeMinutes) {\n  return format(fromUnixTime(date), `h${includeMinutes ? \":mm\" : \"\"} aa`);\n}\n\n// convert Time from [165454...] To => for example [Sunday,Monday...]\nfunction fromUnixToweekDays(date) {\n  return format(fromUnixTime(date), \"EEEE\");\n}\nfunction meterSecToKmH(m) {\n  return parseFloat(m * 3.6).toFixed(2);\n}\n\nexport function fromattTodayWeather(data, coord, units) {\n  return {\n    main: {\n      cityName: coord[0].name,\n      country: coord[0].country,\n      temp: ` ${Math.round(data.temp)} ${units === \"imperial\" ? \"F°\" : \"C°\"}`,\n      icon: data.weather[0].icon,\n      condition: data.weather[0].main,\n    },\n    details: {\n      description: data.weather[0].description,\n      feels_like: `${Math.round(data.feels_like)} °`,\n      wind: `${\n        units === \"imperial\"\n          ? `${data.wind_speed} miles/h`\n          : `${meterSecToKmH(data.wind_speed)} km/h`\n      }`,\n      humidity: `${data.humidity}%`,\n      pressure: `${data.pressure} hPa`,\n      visibility: `${data.visibility / 1000} km`,\n      sunrise: fromUnixToHours(data.sunrise, true),\n      sunset: fromUnixToHours(data.sunset, true),\n    },\n  };\n}\n\nexport function formattHourlyForecast(hourlyData) {\n  const hourlyDataList = hourlyData.slice(0, 24); // getting only the next 24 hour forecast .\n  const formattedHourlyData = hourlyDataList.map((item) => {\n    return {\n      temp: Math.round(item.temp),\n      time: fromUnixToHours(item.dt),\n      icon: item.weather[0].icon,\n    };\n  });\n\n  formattedHourlyData[0].time = \"Now\"; //first object is the current hour\n\n  return formattedHourlyData;\n}\n\nexport function formattDailyForecast(dailyForecast) {\n  return dailyForecast.map((item) => ({\n    day: fromUnixToweekDays(item.dt),\n    icon: item.weather[0].icon,\n    max_temp: Math.round(item.temp.max),\n    min_temp: Math.round(item.temp.min),\n  }));\n}\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { useContext } from \"react/cjs/react.development\";\nimport {\n  fromattTodayWeather,\n  formattHourlyForecast,\n  formattDailyForecast,\n} from \"../../utils/formatWeatherData\";\n\nexport const WeatherData = createContext({});\nexport function WeatherDataProvider(props) {\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const [isloading, setIsLoading] = useState(true);\n  const [todayWeatherData, setTodayWeatherData] = useState(\"\");\n  const [dailyForecast, setDailyForecast] = useState(\"\");\n  const [hourlyData, setHourlyData] = useState(\"\");\n  const [city, setCity] = useState(\"london\");\n  const [units, setUnits] = useState(\"metric\");\n  const [showSearchError, setShowSearchError] = useState(false);\n\n  useEffect(() => {\n    async function fetchTodayWeather() {\n      try {\n        const coordRespon = await fetch(\n          `https://api.openweathermap.org/geo/1.0/direct?q=${city}&appid=${apiKey}`\n        );\n        const coord = await coordRespon.json();\n\n        if (coord.length > 0) {\n          // if found the entered city\n          localStorage.setItem(\"lastSucssesfullSearch\", city);\n          setIsLoading(true);\n          setTodayWeatherData(\"\");\n          setHourlyData(\"\");\n          setDailyForecast(\"\");\n\n          const respon = await fetch(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${coord[0].lat}&lon=${coord[0].lon}&appid=${apiKey}&units=${units}`\n          );\n          const data = await respon.json();\n\n          const formattedData = fromattTodayWeather(data.current, coord, units);\n          const formattedHourlyData = formattHourlyForecast(data.hourly);\n          const formattedDailyForecast = formattDailyForecast(data.daily);\n\n          setTodayWeatherData(formattedData);\n          setHourlyData(formattedHourlyData);\n          setDailyForecast(formattedDailyForecast);\n          setIsLoading(false);\n        } else {\n          setCity(localStorage.getItem(\"lastSucssesfullSearch\"));\n          setShowSearchError(true);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchTodayWeather();\n  }, [city, units, apiKey]);\n\n  return (\n    <WeatherData.Provider\n      value={{\n        isloading,\n        dailyForecast,\n        todayWeatherData,\n        hourlyData,\n        city,\n        setCity,\n        units,\n        setUnits,\n        setShowSearchError,\n        showSearchError,\n      }}\n    >\n      {props.children}\n    </WeatherData.Provider>\n  );\n}\n","import SearchForm from \"./searchForm\";\nimport UnitsBtn from \"./unitsBtn\";\nimport Error from \"../error\";\nimport { useContext } from \"react\";\nimport { WeatherData } from \"../data/weatherData\";\n\nconst Header = () => {\n  const { units, setUnits, showSearchError, setShowSearchError, setCity } =\n    useContext(WeatherData);\n  return (\n    <header className=\"header\">\n      {showSearchError && <Error errorMsg=\"ERROR: City Not Found\" />}\n\n      <img\n        className=\"logo\"\n        src=\"https://openweathermap.org/themes/openweathermap/assets/img/logo_white_cropped.png\"\n        style={{ maxWidth: \"100px\", height: \"auto\" }}\n        alt=\"openWeatherLogo\"\n      />\n      <SearchForm\n        showSearchError={setShowSearchError}\n        isErrorShown={showSearchError}\n        setCity={setCity}\n      />\n      <UnitsBtn units={units} toggleUnits={setUnits} />\n    </header>\n  );\n};\nexport default Header;\n","const SingleForecast = (props) => {\n  return (\n    <div className=\"single-hour-forecast\">\n      <p>{props.text1}</p>\n      <img src={`./images/weather-icons/${props.icon}.svg`} alt=\"\" />\n      <p>{props.degree1}&deg;</p>\n      {props.degree2 && <p>{props.degree2}&deg;</p>}\n    </div>\n  );\n};\n\nexport default SingleForecast;\n","const LoadingEle = (props) => (\n  <div className={props.styleClass}>{props.children}</div>\n);\nexport default LoadingEle;\n","import { useContext } from \"react\";\nimport { WeatherData } from \"../../data/weatherData\";\nimport SingleForecast from \"./singleForecast\";\nimport LoadingEle from \"../../loadingEle.js\";\n\nconst HourlyForecast = () => {\n  const { hourlyData, isloading } = useContext(WeatherData);\n  // dummy array to loop throught it\n  const loadingElements = Array.from(Array(20).keys());\n\n  return (\n    <div className=\"today-forecast-section\">\n      <h6> Today </h6>\n      <div className=\"today-forecast-weather\">\n        {isloading &&\n          loadingElements.map((ele, index) => (\n            <LoadingEle styleClass=\"loading-hour-forecast\" key={index} />\n          ))}\n\n        {!isloading &&\n          hourlyData.map((item, index) => (\n            <SingleForecast\n              key={index}\n              icon={item.icon}\n              text1={item.time}\n              degree1={item.temp}\n            ></SingleForecast>\n          ))}\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default HourlyForecast;\n","import { useContext } from \"react\";\nimport { WeatherData } from \"../data/weatherData\";\nimport SingleForecast from \"./todayWeatherForecast/singleForecast\";\nimport LoadingEle from \"../loadingEle.js\";\n\nconst ForecastSection = () => {\n  const { dailyForecast, isloading } = useContext(WeatherData);\n  const numOfLoadingEle = Array.from(Array(8).keys());\n\n  return (\n    <div className=\"forecast-section\">\n      {isloading &&\n        numOfLoadingEle.map((ele, index) => (\n          <LoadingEle styleClass=\"loading-day-forecast\" key={index} />\n        ))}\n      {!isloading &&\n        dailyForecast.map((item, index) => (\n          <SingleForecast\n            key={index}\n            text1={item.day}\n            degree1={item.max_temp}\n            degree2={item.min_temp}\n            icon={item.icon}\n          />\n        ))}\n    </div>\n  );\n};\nexport default ForecastSection;\n","const DetailCard = (props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-heading\">\n        <span className=\"detail-title\">{props.title}</span>\n        <img\n          src={`./images/icons/${props.iconName}.svg`}\n          alt=\"\"\n          className=\"detail-img\"\n        />\n      </div>\n      <p className=\"detail-content\">{props.content}</p>\n    </div>\n  );\n};\nexport default DetailCard;\n","import { useContext } from \"react\";\nimport DetailCard from \"./detailCard\";\nimport { WeatherData } from \"../../data/weatherData\";\nconst ListOfDetails = () => {\n  const { todayWeatherData } = useContext(WeatherData);\n\n  return (\n    <div className=\"details-section\">\n      <h6> details</h6>\n\n      <div className=\"details\">\n        {todayWeatherData &&\n          Object.keys(todayWeatherData.details).map((key, index) => (\n            <DetailCard\n              key={index}\n              iconName={key}\n              title={key.split(\"_\").join(\" \")}\n              content={todayWeatherData.details[key]}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ListOfDetails;\n","import HourlyForecast from \"./todayWeatherForecast/hourlyForecast\";\nimport ForecastSection from \"./forecastSection\";\n\nimport ListOfDetails from \"./detialSection/listOfDetails\";\n\nconst WeatherBody = () => {\n  return (\n    <div className=\"weather-body\">\n      <HourlyForecast />\n      <ForecastSection />\n      <ListOfDetails />\n    </div>\n  );\n};\n\nexport default WeatherBody;\n","export default function WeatherMainInfo(props) {\n  return (\n    <div className={props.boxStyle}>\n      <span className={props.firstChildStyle}>{props.firstInfo}</span>\n      <span className={props.secChildStyle}>{props.secInfo}</span>\n    </div>\n  );\n}\n","export default function WeatherHeaderImg(props) {\n  return (\n    <div className=\"img-box\">\n      <img\n        src={`./images/weather-icons/${props.icon}.svg`}\n        className=\"weather-header-img\"\n        alt=\"\"\n      />\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { WeatherData } from \"../data/weatherData\";\nimport WeatherMainInfo from \"./weatherMainInfo\";\nimport WeatherHeaderImg from \"./header-img\";\nimport LoadingEle from \"../loadingEle.js\";\n\nfunction WeatherHeader() {\n  const { todayWeatherData, isloading } = useContext(WeatherData);\n\n  return (\n    <div className=\"weather-header\">\n      {/* if there is data  */}\n\n      {!isloading && (\n        <>\n          <WeatherMainInfo\n            boxStyle=\"location\"\n            firstChildStyle=\"city\"\n            secChildStyle=\"contury\"\n            firstInfo={todayWeatherData.main.cityName}\n            secInfo={todayWeatherData.main.country}\n          />\n          <WeatherMainInfo\n            boxStyle=\"deg-status\"\n            firstChildStyle=\"deg\"\n            secChildStyle=\"status\"\n            firstInfo={`${todayWeatherData.main.temp} `}\n            secInfo={todayWeatherData.main.condition}\n          />\n          <WeatherHeaderImg icon={todayWeatherData.main.icon} />\n        </>\n      )}\n\n      {/* if there is no data */}\n      {isloading && (\n        <>\n          {/* city & country */}\n          <LoadingEle styleClass=\"location\">\n            <LoadingEle styleClass=\"loading-city\" />\n            <LoadingEle styleClass=\"loading-country\" />\n          </LoadingEle>\n\n          {/* degree & condition */}\n          <LoadingEle styleClass=\"deg-status\">\n            <LoadingEle styleClass=\"loading-degree\" />\n            <LoadingEle styleClass=\"loading-condition\" />\n          </LoadingEle>\n\n          {/* icon */}\n          <LoadingEle styleClass=\"loading-img\" />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default WeatherHeader;\n","import React from \"react\";\nimport Header from \"./components/header\";\nimport WeatherBody from \"./components/weatherbody\";\nimport WeatherHeader from \"./components/weatherHeader/\";\nimport { WeatherDataProvider } from \"./components/data/weatherData\";\nimport \"./style/main.scss\";\n\nfunction App() {\n  return (\n    <>\n      <WeatherDataProvider>\n        <Header></Header>\n        <WeatherHeader></WeatherHeader>\n        <WeatherBody></WeatherBody>\n      </WeatherDataProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style/globle-style.scss\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}